
https://www.codewithharry.com/videos/cpp-tutorials-in-hindi-26
To RUN CPP file:
we have to compile and excute the exutable file.

test.cpp file name

1 Compile with g++ compiler
--> g++ test.cpp -o test

2 Run executable
--> ./test


Data Types:

1.Built in DataTypes:

int (1,2,3,4)
float (3.5, 43.4)
char ('c','tw')
double(12.23232,45.343434)
boolean (True or false)

2.User Defined datatypes:

1.Struct:
Structure is a collection of variables of different data types under a single name. It is similar to a class in that, both holds a collecion of data of different data types.

2.Union
3.Enum:
An enumeration is a user-defined data type that consists of integral constants. To define an enumeration, keyword enum is used.
An enum variable takes only one value out of many possible values.

3. Derived Datatypes:
1.Array
2.Function
3.Pointer

# Headerfiles and Types:
1.System define header files : it comes with compiler
2.User define header fiels : it is  written by programmer


Pointers:
what is pointer?
pointer is datatype which hold the address of other data types.

& --> Address of operator
* --> Deference operator
:: --> scope operator
~ --> 
->    is used to dereference
Arrays:
An Array is collection of items of same types stored in continueos memory location.
Sometimes,a simple variable is not enough to hold all the data.

Examples : Let say, we want to store marks of 2500 students, having 2500 different variable for this task is not feasible.
To solve this we can define an array with size 2500 that can hold marks of all students.

Pointer arhtmatic:

address(new) = address(current) + i * sizeof(datatype)

Polymorphism:
--> One name and multiple forms
--> eg: function overloading, operator overloading
--> eg: virtual function
Types of Polymorphism:
1. Compile Time Polymorphism
    It is acheived using: 
    1.1-> Function overloading
    1.2-> Operator overloading
2. Run Time Polymorphism
    Runtime polymorphism is acheived using.
    2.1 Virtual Function 


// Pure virtual function in cpp++
Pure virtual function does not perform any operation and 
the function is declared by assigning the value of 0 to it.
Pure virtual functions are declared in abstract class.

// Abstract Base class:

Abstract base class is  a class that has at least one pure virtual function in its body.

This class which are inheriting base class must be need to override the virtual function of the abstract class
other wise complier will through an errro.